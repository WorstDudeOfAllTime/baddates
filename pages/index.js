import Head from 'next/head';
import styles from '../styles/Home.module.css';
import { useState, useEffect } from 'react';
import Map from '../components/Map';
import StoryBoard from '../components/StoryBoard';
import StoryBox from '../components/StoryBox';
import StoryFormRedux from '../components/StoryFormRedux';
export default function Home({ allLocations }) {
  const [story, setStory] = useState([]);
  const [markers, setMarkers] = useState(allLocations.data);
  const [isLoaded, setIsLoaded] = useState(false);
  const [theAddress, setTheAddress] = useState(null);
  const [locationID, setLocationID] = useState('');
  const [theLocation, setTheLocation] = useState(null);
  const [center, setCenter] = useState({
    lat: 39.9526,
    lng: -75.1652,
  });
  return (
    <div className={styles.container}>
      <Head>
        <title>Google API Test</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <div className={`flexCent ${styles.contentContainer}`}>
        <div className={`flexCent ${styles.mapBox}`}>
          <div className={styles.storyBox}>
            <StoryBoard
              center={center}
              stories={story}
              address={theAddress}
              setTheAddress={setTheAddress}
              theLocation={theLocation}
              setTheLocation={setTheLocation}
              children={<StoryFormRedux />}
            />
          </div>
          <div className={styles.theMap}>
            {isLoaded ? (
              <h1 style={{ fontSize: '100px' }}>LOADING</h1>
            ) : (
              <Map
                center={center}
                setCenter={setCenter}
                data={markers}
                setStory={setStory}
                setLocationID={setLocationID}
                setTheAddress={setTheAddress}
                setTheLocation={setTheLocation}
              />
            )}
          </div>

          <div className={`flexCentCol ${styles.storyArea}`}>
            <h2>Stories</h2>
            <div className={`flexCentCol ${styles.storyBill}`}>
              {story &&
                story
                  .sort((a, b) => {
                    var c = new Date(a.date);
                    var d = new Date(b.date);
                    return d - c;
                  })
                  .map((theStory) => {
                    return <StoryBox story={theStory} />;
                  })}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}

export async function getServerSideProps() {
  let response = await fetch('http:/localhost:3000/api/findlocations');
  let allLocations = await response.json();
  return {
    props: { allLocations },
  };
}

/**
 *         <div className={`flexCentCol ${styles.storyBox}`}>
          <StoryBoard
            center={center}
            stories={story}
            address={theAddress}
            setTheAddress={setTheAddress}
            theLocation={theLocation}
            setTheLocation={setTheLocation}
          />
        </div>
 */
