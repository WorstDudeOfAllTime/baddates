import Head from 'next/head';
import styles from '../styles/Home.module.css';
import { useState, useEffect } from 'react';

import Map from '../components/Map';
import OverlayBox from '../components/OverlayBox';
import SearchBar from '../components/SearchBar';
import StoryBoard from '../components/StoryBoard';
export default function Home({ allDates }) {
  const getAddress = async (long, lat) => {
    try {
      const response = await Geocode.fromLatLng(lat, long);
      console.log(response.results[0].formatted_address);
    } catch (err) {}
  };
  const [story, setStory] = useState('');
  const [newStory, setNewStory] = useState('');
  const [markers, setMarkers] = useState(allDates.data);
  const [isLoaded, setIsLoaded] = useState(false);
  const [theAddress, setTheAddress] = useState(null);
  const [overlay, setOverlay] = useState(true);
  const [locationID, setLocationID] = useState('');
  const [center, setCenter] = useState({
    lat: 39.9526,
    lng: -75.1652,
  });
  return (
    <div className={styles.container}>
      <Head>
        <title>Google API Test</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <SearchBar
        setTheAddress={setTheAddress}
        setCenter={setCenter}
      ></SearchBar>
      <div className={`flexCent ${styles.contentContainer}`}>
        <div className={styles.storyBox}>
          <StoryBoard story={story} address={theAddress}/>
        </div>
        <div className={`flexCent ${styles.mapBox}`}>
          {isLoaded ? (
            <h1 style={{ fontSize: '100px' }}>LOADING</h1>
          ) : (
            <Map
              center={center}
              setCenter={setCenter}
              data={markers}
              setStory={setStory}
              setLocationID={setLocationID}
            />
          )}
        </div>
      </div>
    </div>
  );
}

export async function getServerSideProps() {
  let response = await fetch('http:/localhost:3000/api/finddates');
  let allDates = await response.json();
  console.log(allDates);
  return {
    props: { allDates },
  };
}
